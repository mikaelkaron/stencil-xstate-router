/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import 'stencil-xstate';
import {
  Options,
  Send,
} from 'stencil-xstate/dist/types';
import {
  State,
  StateMachine,
} from 'xstate';


export namespace Components {

  interface IsActive {
    'current': State<any, any>;
    'send': Send<any, any, any>;
  }
  interface IsActiveAttributes extends StencilHTMLAttributes {
    'current': State<any, any>;
    'send': Send<any, any, any>;
  }

  interface IsAnonymous {
    'current': State<any, any>;
    'send': Send<any, any, any>;
  }
  interface IsAnonymousAttributes extends StencilHTMLAttributes {
    'current': State<any, any>;
    'send': Send<any, any, any>;
  }

  interface IsAuthenticated {
    'current': State<any, any>;
    'send': Send<any, any, any>;
  }
  interface IsAuthenticatedAttributes extends StencilHTMLAttributes {
    'current': State<any, any>;
    'send': Send<any, any, any>;
  }

  interface XstateRouter {
    /**
    * An XState machine
    */
    'machine': StateMachine<any, any, any>;
    /**
    * Interpreter options that you can pass in
    */
    'options'?: Options;
  }
  interface XstateRouterAttributes extends StencilHTMLAttributes {
    /**
    * An XState machine
    */
    'machine'?: StateMachine<any, any, any>;
    /**
    * Interpreter options that you can pass in
    */
    'options'?: Options;
  }
}

declare global {
  interface StencilElementInterfaces {
    'IsActive': Components.IsActive;
    'IsAnonymous': Components.IsAnonymous;
    'IsAuthenticated': Components.IsAuthenticated;
    'XstateRouter': Components.XstateRouter;
  }

  interface StencilIntrinsicElements {
    'is-active': Components.IsActiveAttributes;
    'is-anonymous': Components.IsAnonymousAttributes;
    'is-authenticated': Components.IsAuthenticatedAttributes;
    'xstate-router': Components.XstateRouterAttributes;
  }


  interface HTMLIsActiveElement extends Components.IsActive, HTMLStencilElement {}
  var HTMLIsActiveElement: {
    prototype: HTMLIsActiveElement;
    new (): HTMLIsActiveElement;
  };

  interface HTMLIsAnonymousElement extends Components.IsAnonymous, HTMLStencilElement {}
  var HTMLIsAnonymousElement: {
    prototype: HTMLIsAnonymousElement;
    new (): HTMLIsAnonymousElement;
  };

  interface HTMLIsAuthenticatedElement extends Components.IsAuthenticated, HTMLStencilElement {}
  var HTMLIsAuthenticatedElement: {
    prototype: HTMLIsAuthenticatedElement;
    new (): HTMLIsAuthenticatedElement;
  };

  interface HTMLXstateRouterElement extends Components.XstateRouter, HTMLStencilElement {}
  var HTMLXstateRouterElement: {
    prototype: HTMLXstateRouterElement;
    new (): HTMLXstateRouterElement;
  };

  interface HTMLElementTagNameMap {
    'is-active': HTMLIsActiveElement
    'is-anonymous': HTMLIsAnonymousElement
    'is-authenticated': HTMLIsAuthenticatedElement
    'xstate-router': HTMLXstateRouterElement
  }

  interface ElementTagNameMap {
    'is-active': HTMLIsActiveElement;
    'is-anonymous': HTMLIsAnonymousElement;
    'is-authenticated': HTMLIsAuthenticatedElement;
    'xstate-router': HTMLXstateRouterElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
