/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  EventObject,
  StateMachine,
} from 'xstate';
import {
  ComponentRenderer,
  NavigationHandler,
  RouteEvent,
  RouteHandler,
  RouterInterpreterOptions,
  StateRenderer,
} from './components/xstate-router/types';

export namespace Components {
  interface XstateRouter {
    /**
    * Component renderer
    */
    'componentRenderer': ComponentRenderer<
    any,
    any,
    EventObject
    >;
    /**
    * An XState machine
    */
    'machine': StateMachine<any, any, EventObject>;
    /**
    * Callback for url changes
    */
    'navigate': NavigationHandler;
    /**
    * Interpreter options
    */
    'options'?: RouterInterpreterOptions;
    /**
    * Callback for route subscriptions
    */
    'route': RouteHandler;
    /**
    * Routes to register
    */
    'routes': Record<string, string>;
    /**
    * State renderer
    */
    'stateRenderer'?: StateRenderer<any, any, RouteEvent>;
  }
  interface XstateRouterNavigo {
    /**
    * Capture clicks from child elements and convert to routes
    */
    'capture'?: boolean;
    /**
    * Component renderer
    */
    'componentRenderer': ComponentRenderer<any, any, EventObject>;
    /**
    * The hash parameter allows you to configure the hash character
    */
    'hash'?: string;
    /**
    * An XState machine
    */
    'machine': StateMachine<any, any, EventObject>;
    /**
    * Interpreter options
    */
    'options'?: RouterInterpreterOptions;
    /**
    * The main URL of your application.
    */
    'root'?: string;
    /**
    * Routes to register
    */
    'routes'?: Record<string, string>;
    /**
    * State renderer
    */
    'stateRenderer'?: StateRenderer<any, any, RouteEvent>;
    /**
    * If useHash set to true then the router uses an old routing approach with hash in the URL. Fall back to this mode if there is no History API supported.
    */
    'useHash'?: boolean;
  }
}

declare global {


  interface HTMLXstateRouterElement extends Components.XstateRouter, HTMLStencilElement {}
  var HTMLXstateRouterElement: {
    prototype: HTMLXstateRouterElement;
    new (): HTMLXstateRouterElement;
  };

  interface HTMLXstateRouterNavigoElement extends Components.XstateRouterNavigo, HTMLStencilElement {}
  var HTMLXstateRouterNavigoElement: {
    prototype: HTMLXstateRouterNavigoElement;
    new (): HTMLXstateRouterNavigoElement;
  };
  interface HTMLElementTagNameMap {
    'xstate-router': HTMLXstateRouterElement;
    'xstate-router-navigo': HTMLXstateRouterNavigoElement;
  }
}

declare namespace LocalJSX {
  interface XstateRouter extends JSXBase.HTMLAttributes<HTMLXstateRouterElement> {
    /**
    * Component renderer
    */
    'componentRenderer'?: ComponentRenderer<
    any,
    any,
    EventObject
    >;
    /**
    * An XState machine
    */
    'machine': StateMachine<any, any, EventObject>;
    /**
    * Callback for url changes
    */
    'navigate'?: NavigationHandler;
    /**
    * Interpreter options
    */
    'options'?: RouterInterpreterOptions;
    /**
    * Callback for route subscriptions
    */
    'route'?: RouteHandler;
    /**
    * Routes to register
    */
    'routes'?: Record<string, string>;
    /**
    * State renderer
    */
    'stateRenderer'?: StateRenderer<any, any, RouteEvent>;
  }
  interface XstateRouterNavigo extends JSXBase.HTMLAttributes<HTMLXstateRouterNavigoElement> {
    /**
    * Capture clicks from child elements and convert to routes
    */
    'capture'?: boolean;
    /**
    * Component renderer
    */
    'componentRenderer'?: ComponentRenderer<any, any, EventObject>;
    /**
    * The hash parameter allows you to configure the hash character
    */
    'hash'?: string;
    /**
    * An XState machine
    */
    'machine': StateMachine<any, any, EventObject>;
    /**
    * Interpreter options
    */
    'options'?: RouterInterpreterOptions;
    /**
    * The main URL of your application.
    */
    'root'?: string;
    /**
    * Routes to register
    */
    'routes'?: Record<string, string>;
    /**
    * State renderer
    */
    'stateRenderer'?: StateRenderer<any, any, RouteEvent>;
    /**
    * If useHash set to true then the router uses an old routing approach with hash in the URL. Fall back to this mode if there is no History API supported.
    */
    'useHash'?: boolean;
  }

  interface IntrinsicElements {
    'xstate-router': XstateRouter;
    'xstate-router-navigo': XstateRouterNavigo;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


