/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import 'stencil-xstate';
import {
  EventObject,
  Interpreter,
  State,
  StateMachine,
} from 'xstate';
import {
  Options,
} from 'stencil-xstate/dist/types';
import {
  Send,
} from './components/xstate-router/index';


export namespace Components {

  interface XstateRouter {
    /**
    * Event name for ROUTE
    */
    'ROUTE': string;
    /**
    * Event name for ROUTED
    */
    'ROUTED': string;
    /**
    * Should machine be initialized with initial route
    */
    'initial': boolean;
    /**
    * An XState machine
    */
    'machine': StateMachine<any, any, EventObject>;
    /**
    * Interpreter options that you can pass in
    */
    'options'?: Options;
    /**
    * Renderer called each time state changes
    */
    'renderer': (
    component: JSX.Element,
    current: State<any, EventObject>,
    send: Send<any, any, EventObject>,
    service: Interpreter<any, any, EventObject>
    ) => JSX.Element[] | JSX.Element;
  }
  interface XstateRouterAttributes extends StencilHTMLAttributes {
    /**
    * Event name for ROUTE
    */
    'ROUTE'?: string;
    /**
    * Event name for ROUTED
    */
    'ROUTED'?: string;
    /**
    * Should machine be initialized with initial route
    */
    'initial'?: boolean;
    /**
    * An XState machine
    */
    'machine': StateMachine<any, any, EventObject>;
    /**
    * Interpreter options that you can pass in
    */
    'options'?: Options;
    /**
    * Renderer called each time state changes
    */
    'renderer'?: (
    component: JSX.Element,
    current: State<any, EventObject>,
    send: Send<any, any, EventObject>,
    service: Interpreter<any, any, EventObject>
    ) => JSX.Element[] | JSX.Element;
  }
}

declare global {
  interface StencilElementInterfaces {
    'XstateRouter': Components.XstateRouter;
  }

  interface StencilIntrinsicElements {
    'xstate-router': Components.XstateRouterAttributes;
  }


  interface HTMLXstateRouterElement extends Components.XstateRouter, HTMLStencilElement {}
  var HTMLXstateRouterElement: {
    prototype: HTMLXstateRouterElement;
    new (): HTMLXstateRouterElement;
  };

  interface HTMLElementTagNameMap {
    'xstate-router': HTMLXstateRouterElement
  }

  interface ElementTagNameMap {
    'xstate-router': HTMLXstateRouterElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
